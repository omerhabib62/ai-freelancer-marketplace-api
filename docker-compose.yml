services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "${PORT:-3000}:3000"
      - "${DEBUG_PORT:-9229}:9229"
    volumes:      
      - .:/usr/src/app  # Add this line for source code
      - /usr/src/app/node_modules  # Keep this for node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DB_TYPE=${DB_TYPE:-postgres}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-admin@123}
      - DB_NAME=${DB_NAME:-ai-freelancer-marketplace}
      - DATABASE_URL=postgres://${DB_USER:-postgres}:${DB_PASSWORD:-admin@123}@postgres:${DB_PORT:-5432}/${DB_NAME:-ai-freelancer-marketplace}
    develop:
      watch:
      - action: sync
        path: .
        target: /usr/src/app
        ignore:
          - node_modules/
          - dist/
          - .git/
          - .env
          - docker-compose.yml
          - Dockerfile
      - action: rebuild
        path: package.json
    command: npm run start:debug
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai-freelancer-network
    restart: unless-stopped
    # Add support for debugging
    stdin_open: true
    tty: true

  postgres:
    image: postgres:14-alpine
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-admin@123}
      - POSTGRES_DB=${DB_NAME:-ai-freelancer-marketplace}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-freelancer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  ai-freelancer-network:
    driver: bridge

volumes:
  postgres_data: